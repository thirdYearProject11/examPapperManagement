name: "CodeQL Advanced"

on:
  push:
    branches: 
      - "development"
      - "main"
    paths:
      - '**/*.java'
      - '**/*.jsx'
      - '**/*.js'
      - '**/*.tsx'
      - '**/*.ts'
  pull_request:
    branches: 
      - "development"
      - "main"
    paths:
      - '**/*.java'
      - '**/*.jsx'
      - '**/*.js'
      - '**/*.tsx'
      - '**/*.ts'
  schedule:
    - cron: '39 4 * * 0'

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'

    - name: Verify Java version
      if: contains(github.event.pull_request.head.repo.default_branch, 'java')
      run: |
        echo "Checking Java version..."
        java -version
        if [[ $(java -version 2>&1) != *"21"* ]]; then
          echo "Java version is not 21. Exiting."
          exit 1
        else
          echo "Java version is correctly set to 21."
        fi

    - name: Set up Node.js 20.18.1
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.1'

    - name: Verify Node.js version
      if: |
        contains(github.event.pull_request.head.repo.default_branch, 'react')
      run: |
        echo "Checking Node.js version..."
        node -v
        if [[ $(node -v) != "v20.18.1" ]]; then
          echo "Node.js version is not 20.18.1. Exiting."
          exit 1
        else
          echo "Node.js version is correctly set to 20.18.1."
        fi

  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: java-kotlin
        - language: javascript-typescript

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
